; PlatformIO Project Configuration File
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html


;**************************************************************
;          Common project settings
;**************************************************************
;
; Config based on openHASP:
; https://github.com/HASwitchPlate/openHASP/blob/master/platformio.ini
; MIT License - Copyright (c) 2019-2024 Francis Van Roie

[platformio]
extra_configs =
    config/lcd.ini
    ; --  Base configurations per platform
    config/esp32/_esp32.ini
    config/esp32s3/_esp32s3.ini
    platformio_override.ini

default_envs =
    ; Uncomment the needed environments in platformio_override.ini
    ; You can also create new environments in in platformio_override.ini
    ${override.extra_default_envs}

[override]
; -- By default there are no ${override.build_flags} set
; -- to use it, copy the platformio_override.ini file from the template
build_flags =
extra_default_envs =


;***************************************************
;          Common environment settings
;***************************************************
[env]
upload_speed = 921600
monitor_speed = 115200

build_flags =
    ;-v     ; verbose
	-D PIOENV=\"${PIOENV}\"
    -Os          ; Code Size Optimization
    ;-Og           ; Code Debug Optimization
    ;-w           ; Suppress warnings
    -D CORE_DEBUG_LEVEL=0           ; 0=Silent, 1=Errors, 2=Warnings
    ;-D LOG_LOCAL_LEVEL=5 ; Verbose
    -D LOG_MAXIMUM_LEVEL_VERBOSE
    -D LOG_DEFAULT_LEVEL_WARNING
    -D LOG_TIMESTAMP_SOURCE_SYSTEM
    -D CONFIG_ARDUHAL_ESP_LOG=1
    -D CONFIG_LOG_COLORS=1
    -I include    ; include lv_conf.h and hasp_conf.h
    ; -- littlevgl build options ------------------------------
    -D LV_CONF_INCLUDE_SIMPLE       ; for lvgl
    -D LV_LVGL_H_INCLUDE_SIMPLE     ; for lv_drivers
    -D LV_COMP_CONF_INCLUDE_SIMPLE  ; for components
    ; -D LV_SYMBOL_DEF_H              ; don't load default symbol defines
    -D LODEPNG_NO_COMPILE_ALLOCATORS ; use PSram functions
    -D LV_PNG_USE_LV_FILESYSTEM=1   ; use lvgl filesystem api, drive L:\
    -D LV_USE_FILESYSTEM=1
    ; -- ESP build options ------------------------------------
    -D SPIFFS_TEMPORAL_FD_CACHE     ; speedup opening recent files
    ; -- StreamUtils build options ----------------------------
    -D STREAMUTILS_ENABLE_EEPROM=1  ; for STM32, it also supports EEPROM
    -D LV_CONF_PATH="${PROJECT_DIR}/src/lv_conf.h" 
    -D VER_MAJ=0
    -D VER_MIN=0
    -D VER_REV=1
    -D LITTLEFS=LittleFS
    ;-D HASP_VER_REV=4-rc1

    ${override.build_flags}

; -- Shared library dependencies in all environments
; Warning : don't put comments after github links => causes infinite download loop
lib_deps =
    LVGL
    ArduinoJSON

lib_ldf_mode=deep

[lovyangfx]
lib_deps =
    lovyan03/LovyanGFX@^1.1.12

[arduinogfx]
lib_deps =
    moononournation/GFX Library for Arduino@1.4.7  ; Update needs modification of custom PCA class
    ;git+https://github.com/moononournation/Arduino_GFX.git

[tft_espi]
lib_deps =
    bodmer/TFT_eSPI@2.5.43
    ;https://github.com/Bodmer/TFT_eSPI.git#master

[goodix]
lib_deps =
    git+https://github.com/netwizeBE/arduino-goodix.git

[ft6336]
lib_deps =
    git+https://github.com/aselectroworks/Arduino-FT6336U.git

[tsc2007]
lib_deps =
    git+https://github.com/adafruit/Adafruit_TSC2007.git

[gsl1680]
lib_deps =
    git+https://github.com/arovak/GSL2038.git

[stmpe610]
lib_deps =
    adafruit/Adafruit STMPE610@^1.1.6
